//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hwoexClient.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Worker", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Worker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildrenCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaritalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WantedPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WantedSalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthDateField, value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildrenCount {
            get {
                return this.ChildrenCountField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenCountField, value) != true)) {
                    this.ChildrenCountField = value;
                    this.RaisePropertyChanged("ChildrenCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaritalStatus {
            get {
                return this.MaritalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MaritalStatusField, value) != true)) {
                    this.MaritalStatusField = value;
                    this.RaisePropertyChanged("MaritalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondName {
            get {
                return this.SecondNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondNameField, value) != true)) {
                    this.SecondNameField = value;
                    this.RaisePropertyChanged("SecondName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WantedPosition {
            get {
                return this.WantedPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.WantedPositionField, value) != true)) {
                    this.WantedPositionField = value;
                    this.RaisePropertyChanged("WantedPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WantedSalary {
            get {
                return this.WantedSalaryField;
            }
            set {
                if ((object.ReferenceEquals(this.WantedSalaryField, value) != true)) {
                    this.WantedSalaryField = value;
                    this.RaisePropertyChanged("WantedSalary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Education", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Education : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Faculty {
            get {
                return this.FacultyField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyField, value) != true)) {
                    this.FacultyField = value;
                    this.RaisePropertyChanged("Faculty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinishDate {
            get {
                return this.FinishDateField;
            }
            set {
                if ((object.ReferenceEquals(this.FinishDateField, value) != true)) {
                    this.FinishDateField = value;
                    this.RaisePropertyChanged("FinishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsFinished {
            get {
                return this.IsFinishedField;
            }
            set {
                if ((object.ReferenceEquals(this.IsFinishedField, value) != true)) {
                    this.IsFinishedField = value;
                    this.RaisePropertyChanged("IsFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkerId {
            get {
                return this.WorkerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkerIdField, value) != true)) {
                    this.WorkerIdField = value;
                    this.RaisePropertyChanged("WorkerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Experiance", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Experiance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CeoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ceo {
            get {
                return this.CeoField;
            }
            set {
                if ((object.ReferenceEquals(this.CeoField, value) != true)) {
                    this.CeoField = value;
                    this.RaisePropertyChanged("Ceo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinishDate {
            get {
                return this.FinishDateField;
            }
            set {
                if ((object.ReferenceEquals(this.FinishDateField, value) != true)) {
                    this.FinishDateField = value;
                    this.RaisePropertyChanged("FinishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SalaryField, value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Size {
            get {
                return this.SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeField, value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkerId {
            get {
                return this.WorkerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkerIdField, value) != true)) {
                    this.WorkerIdField = value;
                    this.RaisePropertyChanged("WorkerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTableCount", ReplyAction="http://tempuri.org/IService1/GetTableCountResponse")]
        int GetTableCount(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTableCount", ReplyAction="http://tempuri.org/IService1/GetTableCountResponse")]
        System.Threading.Tasks.Task<int> GetTableCountAsync(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWorkers", ReplyAction="http://tempuri.org/IService1/GetWorkersResponse")]
        hwoexClient.Service.Worker[] GetWorkers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWorkers", ReplyAction="http://tempuri.org/IService1/GetWorkersResponse")]
        System.Threading.Tasks.Task<hwoexClient.Service.Worker[]> GetWorkersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEducations", ReplyAction="http://tempuri.org/IService1/GetEducationsResponse")]
        hwoexClient.Service.Education[] GetEducations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEducations", ReplyAction="http://tempuri.org/IService1/GetEducationsResponse")]
        System.Threading.Tasks.Task<hwoexClient.Service.Education[]> GetEducationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExperiances", ReplyAction="http://tempuri.org/IService1/GetExperiancesResponse")]
        hwoexClient.Service.Experiance[] GetExperiances();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExperiances", ReplyAction="http://tempuri.org/IService1/GetExperiancesResponse")]
        System.Threading.Tasks.Task<hwoexClient.Service.Experiance[]> GetExperiancesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertWorker", ReplyAction="http://tempuri.org/IService1/InsertWorkerResponse")]
        void InsertWorker(string surname, string name, string secondName, string city, string address, string sex, string maritalStatus, string birthDate, string wantedSalary, string wantedPosition, string cardNumber, string childrenCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertWorker", ReplyAction="http://tempuri.org/IService1/InsertWorkerResponse")]
        System.Threading.Tasks.Task InsertWorkerAsync(string surname, string name, string secondName, string city, string address, string sex, string maritalStatus, string birthDate, string wantedSalary, string wantedPosition, string cardNumber, string childrenCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertEducation", ReplyAction="http://tempuri.org/IService1/InsertEducationResponse")]
        void InsertEducation(string name, string startDate, string finishDate, string faculty, string isFinished, string type, string owner, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertEducation", ReplyAction="http://tempuri.org/IService1/InsertEducationResponse")]
        System.Threading.Tasks.Task InsertEducationAsync(string name, string startDate, string finishDate, string faculty, string isFinished, string type, string owner, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertExperience", ReplyAction="http://tempuri.org/IService1/InsertExperienceResponse")]
        void InsertExperience(string name, string size, string ceo, string type, string position, string salary, string startDate, string finishDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertExperience", ReplyAction="http://tempuri.org/IService1/InsertExperienceResponse")]
        System.Threading.Tasks.Task InsertExperienceAsync(string name, string size, string ceo, string type, string position, string salary, string startDate, string finishDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTable", ReplyAction="http://tempuri.org/IService1/DeleteTableResponse")]
        void DeleteTable(string tableName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTable", ReplyAction="http://tempuri.org/IService1/DeleteTableResponse")]
        System.Threading.Tasks.Task DeleteTableAsync(string tableName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWorker", ReplyAction="http://tempuri.org/IService1/GetWorkerResponse")]
        hwoexClient.Service.Worker[] GetWorker(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWorker", ReplyAction="http://tempuri.org/IService1/GetWorkerResponse")]
        System.Threading.Tasks.Task<hwoexClient.Service.Worker[]> GetWorkerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEducation", ReplyAction="http://tempuri.org/IService1/GetEducationResponse")]
        hwoexClient.Service.Education[] GetEducation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEducation", ReplyAction="http://tempuri.org/IService1/GetEducationResponse")]
        System.Threading.Tasks.Task<hwoexClient.Service.Education[]> GetEducationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExperiance", ReplyAction="http://tempuri.org/IService1/GetExperianceResponse")]
        hwoexClient.Service.Experiance[] GetExperiance(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExperiance", ReplyAction="http://tempuri.org/IService1/GetExperianceResponse")]
        System.Threading.Tasks.Task<hwoexClient.Service.Experiance[]> GetExperianceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateWorker", ReplyAction="http://tempuri.org/IService1/UpdateWorkerResponse")]
        void UpdateWorker(string id, string surname, string name, string secondName, string city, string address, string sex, string maritalStatus, string birthDate, string wantedSalary, string wantedPosition, string cardNumber, string childrenCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateWorker", ReplyAction="http://tempuri.org/IService1/UpdateWorkerResponse")]
        System.Threading.Tasks.Task UpdateWorkerAsync(string id, string surname, string name, string secondName, string city, string address, string sex, string maritalStatus, string birthDate, string wantedSalary, string wantedPosition, string cardNumber, string childrenCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEducation", ReplyAction="http://tempuri.org/IService1/UpdateEducationResponse")]
        void UpdateEducation(string id, string name, string type, string owner, string location, string startDate, string finishDate, string faculty, string isFinished);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEducation", ReplyAction="http://tempuri.org/IService1/UpdateEducationResponse")]
        System.Threading.Tasks.Task UpdateEducationAsync(string id, string name, string type, string owner, string location, string startDate, string finishDate, string faculty, string isFinished);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateExperiance", ReplyAction="http://tempuri.org/IService1/UpdateExperianceResponse")]
        void UpdateExperiance(int id, string name, int size, string ceo, string type, string position, int salary, string startDate, string finishDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateExperiance", ReplyAction="http://tempuri.org/IService1/UpdateExperianceResponse")]
        System.Threading.Tasks.Task UpdateExperianceAsync(int id, string name, int size, string ceo, string type, string position, int salary, string startDate, string finishDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectFromWorkers", ReplyAction="http://tempuri.org/IService1/SelectFromWorkersResponse")]
        hwoexClient.Service.Worker[] SelectFromWorkers(string surname, string name, string city, string address, string martialStatus, string wantedSalary, string wantedPositon, string childrenCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectFromWorkers", ReplyAction="http://tempuri.org/IService1/SelectFromWorkersResponse")]
        System.Threading.Tasks.Task<hwoexClient.Service.Worker[]> SelectFromWorkersAsync(string surname, string name, string city, string address, string martialStatus, string wantedSalary, string wantedPositon, string childrenCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectFromEducation", ReplyAction="http://tempuri.org/IService1/SelectFromEducationResponse")]
        hwoexClient.Service.Education[] SelectFromEducation(string name, string type, string owner, string faculty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectFromEducation", ReplyAction="http://tempuri.org/IService1/SelectFromEducationResponse")]
        System.Threading.Tasks.Task<hwoexClient.Service.Education[]> SelectFromEducationAsync(string name, string type, string owner, string faculty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectFromExperiance", ReplyAction="http://tempuri.org/IService1/SelectFromExperianceResponse")]
        hwoexClient.Service.Experiance[] SelectFromExperiance(string name, string size, string ceo, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectFromExperiance", ReplyAction="http://tempuri.org/IService1/SelectFromExperianceResponse")]
        System.Threading.Tasks.Task<hwoexClient.Service.Experiance[]> SelectFromExperianceAsync(string name, string size, string ceo, string type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : hwoexClient.Service.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<hwoexClient.Service.IService1>, hwoexClient.Service.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
        
        public int GetTableCount(string tableName) {
            return base.Channel.GetTableCount(tableName);
        }
        
        public System.Threading.Tasks.Task<int> GetTableCountAsync(string tableName) {
            return base.Channel.GetTableCountAsync(tableName);
        }
        
        public hwoexClient.Service.Worker[] GetWorkers() {
            return base.Channel.GetWorkers();
        }
        
        public System.Threading.Tasks.Task<hwoexClient.Service.Worker[]> GetWorkersAsync() {
            return base.Channel.GetWorkersAsync();
        }
        
        public hwoexClient.Service.Education[] GetEducations() {
            return base.Channel.GetEducations();
        }
        
        public System.Threading.Tasks.Task<hwoexClient.Service.Education[]> GetEducationsAsync() {
            return base.Channel.GetEducationsAsync();
        }
        
        public hwoexClient.Service.Experiance[] GetExperiances() {
            return base.Channel.GetExperiances();
        }
        
        public System.Threading.Tasks.Task<hwoexClient.Service.Experiance[]> GetExperiancesAsync() {
            return base.Channel.GetExperiancesAsync();
        }
        
        public void InsertWorker(string surname, string name, string secondName, string city, string address, string sex, string maritalStatus, string birthDate, string wantedSalary, string wantedPosition, string cardNumber, string childrenCount) {
            base.Channel.InsertWorker(surname, name, secondName, city, address, sex, maritalStatus, birthDate, wantedSalary, wantedPosition, cardNumber, childrenCount);
        }
        
        public System.Threading.Tasks.Task InsertWorkerAsync(string surname, string name, string secondName, string city, string address, string sex, string maritalStatus, string birthDate, string wantedSalary, string wantedPosition, string cardNumber, string childrenCount) {
            return base.Channel.InsertWorkerAsync(surname, name, secondName, city, address, sex, maritalStatus, birthDate, wantedSalary, wantedPosition, cardNumber, childrenCount);
        }
        
        public void InsertEducation(string name, string startDate, string finishDate, string faculty, string isFinished, string type, string owner, string location) {
            base.Channel.InsertEducation(name, startDate, finishDate, faculty, isFinished, type, owner, location);
        }
        
        public System.Threading.Tasks.Task InsertEducationAsync(string name, string startDate, string finishDate, string faculty, string isFinished, string type, string owner, string location) {
            return base.Channel.InsertEducationAsync(name, startDate, finishDate, faculty, isFinished, type, owner, location);
        }
        
        public void InsertExperience(string name, string size, string ceo, string type, string position, string salary, string startDate, string finishDate) {
            base.Channel.InsertExperience(name, size, ceo, type, position, salary, startDate, finishDate);
        }
        
        public System.Threading.Tasks.Task InsertExperienceAsync(string name, string size, string ceo, string type, string position, string salary, string startDate, string finishDate) {
            return base.Channel.InsertExperienceAsync(name, size, ceo, type, position, salary, startDate, finishDate);
        }
        
        public void DeleteTable(string tableName, int id) {
            base.Channel.DeleteTable(tableName, id);
        }
        
        public System.Threading.Tasks.Task DeleteTableAsync(string tableName, int id) {
            return base.Channel.DeleteTableAsync(tableName, id);
        }
        
        public hwoexClient.Service.Worker[] GetWorker(int id) {
            return base.Channel.GetWorker(id);
        }
        
        public System.Threading.Tasks.Task<hwoexClient.Service.Worker[]> GetWorkerAsync(int id) {
            return base.Channel.GetWorkerAsync(id);
        }
        
        public hwoexClient.Service.Education[] GetEducation(int id) {
            return base.Channel.GetEducation(id);
        }
        
        public System.Threading.Tasks.Task<hwoexClient.Service.Education[]> GetEducationAsync(int id) {
            return base.Channel.GetEducationAsync(id);
        }
        
        public hwoexClient.Service.Experiance[] GetExperiance(int id) {
            return base.Channel.GetExperiance(id);
        }
        
        public System.Threading.Tasks.Task<hwoexClient.Service.Experiance[]> GetExperianceAsync(int id) {
            return base.Channel.GetExperianceAsync(id);
        }
        
        public void UpdateWorker(string id, string surname, string name, string secondName, string city, string address, string sex, string maritalStatus, string birthDate, string wantedSalary, string wantedPosition, string cardNumber, string childrenCount) {
            base.Channel.UpdateWorker(id, surname, name, secondName, city, address, sex, maritalStatus, birthDate, wantedSalary, wantedPosition, cardNumber, childrenCount);
        }
        
        public System.Threading.Tasks.Task UpdateWorkerAsync(string id, string surname, string name, string secondName, string city, string address, string sex, string maritalStatus, string birthDate, string wantedSalary, string wantedPosition, string cardNumber, string childrenCount) {
            return base.Channel.UpdateWorkerAsync(id, surname, name, secondName, city, address, sex, maritalStatus, birthDate, wantedSalary, wantedPosition, cardNumber, childrenCount);
        }
        
        public void UpdateEducation(string id, string name, string type, string owner, string location, string startDate, string finishDate, string faculty, string isFinished) {
            base.Channel.UpdateEducation(id, name, type, owner, location, startDate, finishDate, faculty, isFinished);
        }
        
        public System.Threading.Tasks.Task UpdateEducationAsync(string id, string name, string type, string owner, string location, string startDate, string finishDate, string faculty, string isFinished) {
            return base.Channel.UpdateEducationAsync(id, name, type, owner, location, startDate, finishDate, faculty, isFinished);
        }
        
        public void UpdateExperiance(int id, string name, int size, string ceo, string type, string position, int salary, string startDate, string finishDate) {
            base.Channel.UpdateExperiance(id, name, size, ceo, type, position, salary, startDate, finishDate);
        }
        
        public System.Threading.Tasks.Task UpdateExperianceAsync(int id, string name, int size, string ceo, string type, string position, int salary, string startDate, string finishDate) {
            return base.Channel.UpdateExperianceAsync(id, name, size, ceo, type, position, salary, startDate, finishDate);
        }
        
        public hwoexClient.Service.Worker[] SelectFromWorkers(string surname, string name, string city, string address, string martialStatus, string wantedSalary, string wantedPositon, string childrenCount) {
            return base.Channel.SelectFromWorkers(surname, name, city, address, martialStatus, wantedSalary, wantedPositon, childrenCount);
        }
        
        public System.Threading.Tasks.Task<hwoexClient.Service.Worker[]> SelectFromWorkersAsync(string surname, string name, string city, string address, string martialStatus, string wantedSalary, string wantedPositon, string childrenCount) {
            return base.Channel.SelectFromWorkersAsync(surname, name, city, address, martialStatus, wantedSalary, wantedPositon, childrenCount);
        }
        
        public hwoexClient.Service.Education[] SelectFromEducation(string name, string type, string owner, string faculty) {
            return base.Channel.SelectFromEducation(name, type, owner, faculty);
        }
        
        public System.Threading.Tasks.Task<hwoexClient.Service.Education[]> SelectFromEducationAsync(string name, string type, string owner, string faculty) {
            return base.Channel.SelectFromEducationAsync(name, type, owner, faculty);
        }
        
        public hwoexClient.Service.Experiance[] SelectFromExperiance(string name, string size, string ceo, string type) {
            return base.Channel.SelectFromExperiance(name, size, ceo, type);
        }
        
        public System.Threading.Tasks.Task<hwoexClient.Service.Experiance[]> SelectFromExperianceAsync(string name, string size, string ceo, string type) {
            return base.Channel.SelectFromExperianceAsync(name, size, ceo, type);
        }
    }
}
